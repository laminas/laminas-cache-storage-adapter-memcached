<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.18.0@b113f3ed0259fd6e212d87c3df80eec95a6abf19">
  <file src="benchmark/MemcachedStorageAdapterBench.php">
    <UnusedClass>
      <code>MemcachedStorageAdapterBench</code>
    </UnusedClass>
  </file>
  <file src="src/Memcached.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$memc->getResultCode()]]></code>
      <code><![CDATA[$memc->getResultCode()]]></code>
      <code><![CDATA[$memc->getResultCode()]]></code>
      <code><![CDATA[$memc->getResultCode()]]></code>
      <code><![CDATA[$memc->getResultCode()]]></code>
      <code>$rsCode</code>
      <code>$rsCode</code>
      <code>$rsCode</code>
      <code>$rsCode</code>
      <code>$rsCode</code>
      <code>$rsCode</code>
      <code>$rsCode</code>
    </ArgumentTypeCoercion>
    <InvalidReturnStatement>
      <code><![CDATA[$mem['limit_maxbytes']]]></code>
      <code>time() + $ttl</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>int</code>
      <code>int|float</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement>
      <code>parent::setOptions($options)</code>
    </LessSpecificReturnStatement>
    <MixedArgument>
      <code>$casToken</code>
      <code>$rsCode</code>
      <code>$token</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$internalKey</code>
      <code>$missingKey</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$output['cas']]]></code>
      <code><![CDATA[$output['value']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$casToken</code>
      <code><![CDATA[$namespacedKeyValuePairs[$this->namespacePrefix . $normalizedKey]]]></code>
      <code>$normalizedKey</code>
      <code>$normalizedKey</code>
      <code>$output</code>
      <code>$result</code>
      <code>$result</code>
      <code>$result</code>
      <code>$tmp[substr($internalKey, $nsPrefixLength)]</code>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>MemcachedOptions</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code>$normalizedKey</code>
      <code>$normalizedKey</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$this->options]]></code>
    </MixedReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$options</code>
      <code>$options</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType>
      <code>Memcached</code>
    </MoreSpecificReturnType>
    <PossiblyInvalidArrayAccess>
      <code><![CDATA[$mem['bytes']]]></code>
      <code><![CDATA[$mem['limit_maxbytes']]]></code>
      <code><![CDATA[$mem['limit_maxbytes']]]></code>
    </PossiblyInvalidArrayAccess>
    <PossiblyInvalidOperand>
      <code><![CDATA[$mem['bytes']]]></code>
      <code><![CDATA[$mem['limit_maxbytes']]]></code>
    </PossiblyInvalidOperand>
    <PossiblyNullArgument>
      <code>$casToken</code>
      <code><![CDATA[$this->resourceId]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getResource</code>
    </PossiblyNullReference>
    <PossiblyUnusedReturnValue>
      <code>Memcached</code>
      <code>int|float</code>
      <code>int|float</code>
    </PossiblyUnusedReturnValue>
    <PropertyNotSetInConstructor>
      <code>Memcached</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(int) $value</code>
      <code>(int) $value</code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code>assert(is_string($errorMessage))</code>
      <code>is_string($errorMessage)</code>
    </RedundantCondition>
    <UnsupportedPropertyReferenceUsage>
      <code><![CDATA[$initialized = &$this->initialized]]></code>
    </UnsupportedPropertyReferenceUsage>
  </file>
  <file src="src/Memcached/AdapterPluginManagerDelegatorFactory.php">
    <UnusedParam>
      <code>$container</code>
      <code>$name</code>
    </UnusedParam>
  </file>
  <file src="src/Memcached/Module.php">
    <UnusedClass>
      <code>Module</code>
    </UnusedClass>
  </file>
  <file src="src/MemcachedOptions.php">
    <PossiblyNullReference>
      <code>getResource</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>getLibOption</code>
      <code>getMemcachedResource</code>
      <code>setMemcachedResource</code>
      <code>setNamespaceSeparator</code>
      <code>setResourceId</code>
    </PossiblyUnusedMethod>
    <RedundantCastGivenDocblockType>
      <code>(string) $namespace</code>
      <code>(string) $namespaceSeparator</code>
      <code>(string) $resourceId</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/MemcachedResourceManager.php">
    <ArgumentTypeCoercion>
      <code><![CDATA['Memcached']]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($libOptions) && ! $libOptions instanceof Traversable]]></code>
      <code>$server instanceof Traversable</code>
      <code>is_array($resource)</code>
    </DocblockTypeContradiction>
    <MissingReturnType>
      <code>normalizeLibOptionKey</code>
      <code>normalizeLibOptions</code>
      <code>normalizePersistentId</code>
      <code>normalizeServer</code>
      <code>normalizeServers</code>
    </MissingReturnType>
    <MixedArgument>
      <code>$constValue</code>
      <code>$k</code>
      <code>$key</code>
      <code><![CDATA[$resource['lib_options']]]></code>
      <code><![CDATA[$resource['lib_options']]]></code>
      <code><![CDATA[$resource['persistent_id']]]></code>
      <code><![CDATA[$resource['persistent_id']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
      <code>$server</code>
      <code>$servers</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$resource['lib_options']]]></code>
      <code><![CDATA[$resource['lib_options']]]></code>
      <code><![CDATA[$resource['lib_options']]]></code>
      <code><![CDATA[$resource['lib_options']]]></code>
      <code><![CDATA[$resource['lib_options'][$key]]]></code>
      <code><![CDATA[$resource['persistent_id']]]></code>
      <code><![CDATA[$resource['persistent_id']]]></code>
      <code><![CDATA[$resource['persistent_id']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code><![CDATA[$resource['lib_options']]]></code>
      <code><![CDATA[$resource['persistent_id']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
    </MixedArrayAssignment>
    <MixedArrayOffset>
      <code>$libOptions[$constValue]</code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$constValue</code>
      <code>$k</code>
      <code>$key</code>
      <code>$key</code>
      <code>$libOptions[$constValue]</code>
      <code>$resource</code>
      <code>$result[$key]</code>
      <code>$server</code>
      <code>$v</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>array</code>
      <code>array</code>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code><![CDATA[$serverA['host']]]></code>
      <code><![CDATA[$serverA['port']]]></code>
      <code><![CDATA[$serverB['host']]]></code>
      <code><![CDATA[$serverB['port']]]></code>
    </MixedOperand>
    <MixedReturnStatement>
      <code><![CDATA[$resource['lib_options']]]></code>
      <code><![CDATA[$resource['persistent_id']]]></code>
      <code><![CDATA[$resource['servers']]]></code>
    </MixedReturnStatement>
    <NoValue>
      <code>$server</code>
    </NoValue>
    <PossiblyInvalidArgument>
      <code>$servers</code>
      <code>$servers</code>
      <code>$servers</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$server['host']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUnusedReturnValue>
      <code>MemcachedResourceManager</code>
      <code>MemcachedResourceManager</code>
    </PossiblyUnusedReturnValue>
    <RedundantCast>
      <code><![CDATA[(int) $server['port']]]></code>
    </RedundantCast>
    <RedundantCastGivenDocblockType>
      <code>(int) $key</code>
      <code>(string) $id</code>
      <code>(string) $persistentId</code>
    </RedundantCastGivenDocblockType>
    <UnsupportedPropertyReferenceUsage>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
      <code><![CDATA[$resource = &$this->resources[$id]]]></code>
    </UnsupportedPropertyReferenceUsage>
  </file>
  <file src="test/integration/Psr/CacheItemPool/MemcachedIntegrationTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->tz]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="test/integration/Psr/SimpleCache/MemcachedIntegrationTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->tz]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="test/unit/MemcachedResourceManagerTest.php">
    <MissingReturnType>
      <code>testSetLibOptionsOnExistingResource</code>
      <code>testValidResources</code>
    </MissingReturnType>
    <MixedArgument>
      <code>$resource</code>
      <code><![CDATA[$resource['lib_options']]]></code>
    </MixedArgument>
    <MixedInferredReturnType>
      <code>array</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/unit/MemcachedTest.php">
    <DeprecatedMethod>
      <code>addServer</code>
      <code>addServer</code>
      <code>addServer</code>
      <code>setLibOption</code>
    </DeprecatedMethod>
    <MixedInferredReturnType>
      <code>array</code>
    </MixedInferredReturnType>
  </file>
</files>
